-- This file was generated using Luraph Obfuscator v12.5 by memcorrupt.

local lIlIIlIl1IiIIl1lliIIl = assert local lIl1ilillIiIIlIIi1Il1 = select local iIIi1i1Il1Iiil1i111 = tonumber local liIliI11Ill11l1I1i1 = unpack local IIIl1iIIllli111ilIl = pcall local ii1i1i11ilIlI1lll1i = setfenv local lIlli11i1l1Il1iIlI1 = setmetatable local ll11il1lliiII1IIl1i = type local ilIii1iiiIIii1llili = getfenv local l1l11Illl1Ii1ii1iiI = tostring local lIIIiiIi1l1i1I11lil = error local ll1Ii1lIli1IlI1lIll = string.sub local iIIIill1IilllI1lil1 = string.byte local IliIIII1liIIlIiiIll = string.char local Ilii1llIll1III1ll1I = string.rep local I1I1I1iiiIiIIIiliii = string.gsub local I1iilII1IIiiIlIlIl1 = string.match local i11lliliIl1l1l1iiiI = table.insert local iI1Ii1lllillIlIIIll = iIIIill1IilllI1lil1("v", 1) local I111IilIil1i1lI11Il, ii1lI1i1l1lil1IIIIl = #{2591}, #{ 3915, 1649, 1771, 2119, 1558, 3046, 1517, 6701, 5217, 6376, 3959, 1086, 3799, 1305, 4552, 5562, 680, 4557, 567, 5452, 965 } + iI1Ii1lllillIlIIIll + 130932 local IiIliIIIll1llIIi1i1 = {} local li1I1lilIi1ll1Ii11l = 1 local lI1i11Ii11i1iIi1I1i, Iiil1II1lliiI1l1li1 local function li1I11iili1iIiiiIi1(I1llIi1111I1I1IIi1l, lIlIIl1I11iIiiili1lIl) local lII1l1IlllIIi1IlIIl I1llIi1111I1I1IIi1l = I1I1I1iiiIiIIIiliii(ll1Ii1lIli1IlI1lIll(I1llIi1111I1I1IIi1l, 5), "..", function(iIll11ll11liiI111il) if iIIIill1IilllI1lil1(iIll11ll11liiI111il, 2) == 72 then lII1l1IlllIIi1IlIIl = iIIi1i1Il1Iiil1i111(ll1Ii1lIli1IlI1lIll(iIll11ll11liiI111il, 1, 1)) return "" else local lIliIilI11l1llIliiIll = IliIIII1liIIlIiiIll(iIIi1i1Il1Iiil1i111(iIll11ll11liiI111il, 16)) if lII1l1IlllIIi1IlIIl then local I1IIlII11II1lI1I1iI = Ilii1llIll1III1ll1I(lIliIilI11l1llIliiIll, lII1l1IlllIIi1IlIIl) lII1l1IlllIIi1IlIIl = nil return I1IIlII11II1lI1I1iI else return lIliIilI11l1llIliiIll end end end) local function lIlI11liI1ii1llIiiiIl() local iliilI1Il1l11iiIIIl = iIIIill1IilllI1lil1(I1llIi1111I1I1IIi1l, li1I1lilIi1ll1Ii11l, li1I1lilIi1ll1Ii11l) li1I1lilIi1ll1Ii11l = li1I1lilIi1ll1Ii11l + 1 return iliilI1Il1l11iiIIIl end local function lIli11ilIIIiIIiIil11I() local iliilI1Il1l11iiIIIl, lIliIilI11l1llIliiIll, I1IIlII11II1lI1I1iI, iiIIlI1IliIiiIiIIlI = iIIIill1IilllI1lil1(I1llIi1111I1I1IIi1l, li1I1lilIi1ll1Ii11l, li1I1lilIi1ll1Ii11l + 3) li1I1lilIi1ll1Ii11l = li1I1lilIi1ll1Ii11l + 4 return iiIIlI1IliIiiIiIIlI * 16777216 + I1IIlII11II1lI1I1iI * 65536 + lIliIilI11l1llIliiIll * 256 + iliilI1Il1l11iiIIIl end local function IIlli1I1l11lI111ii1(Ii1I1I1i1iI1I1iilll, lIlliilIlii1ill1llil1, i1IllIII11iIlliI1ll) if i1IllIII11iIlliI1ll then local lIlIl11IlilI1iII1ilil, lIllilIIl11lillIIiIi1 = 0, 0 for lIliI1l1iii1iII1iIl1l = lIlliilIlii1ill1llil1, i1IllIII11iIlliI1ll do lIlIl11IlilI1iII1ilil = lIlIl11IlilI1iII1ilil + 2 ^ lIllilIIl11lillIIiIi1 * IIlli1I1l11lI111ii1(Ii1I1I1i1iI1I1iilll, lIliI1l1iii1iII1iIl1l) lIllilIIl11lillIIiIi1 = lIllilIIl11lillIIiIi1 + 1 end return lIlIl11IlilI1iII1ilil else local iliiIllIl11il1ilIii = 2 ^ (lIlliilIlii1ill1llil1 - 1) return iliiIllIl11il1ilIii <= Ii1I1I1i1iI1I1iilll % (iliiIllIl11il1ilIii + iliiIllIl11il1ilIii) and 1 or 0 end end local function IIiI11lII11I1iil111() local iliilI1Il1l11iiIIIl, lIliIilI11l1llIliiIll = lIli11ilIIIiIIiIil11I(), lIli11ilIIIiIIiIil11I() if iliilI1Il1l11iiIIIl == 0 and lIliIilI11l1llIliiIll == 0 then return 0 end return (-2 * IIlli1I1l11lI111ii1(lIliIilI11l1llIliiIll, 32) + 1) * 2 ^ (IIlli1I1l11lI111ii1(lIliIilI11l1llIliiIll, 21, 31) - 1023) * ((IIlli1I1l11lI111ii1(lIliIilI11l1llIliiIll, 1, 20) * 4294967296 + iliilI1Il1l11iiIIIl) / 4503599627370496 + 1) end local iIi1lIill1iIl11l1Ii = bit or bit32 local l11IiiIIl1ll1IIIIIl = iIi1lIill1iIl11l1Ii and iIi1lIill1iIl11l1Ii.bxor or function(iliilI1Il1l11iiIIIl, lIliIilI11l1llIliiIll) local II1lliI1lliiii1lIiI = 1 local I1IIlII11II1lI1I1iI = 0 while iliilI1Il1l11iiIIIl > 0 and lIliIilI11l1llIliiIll > 0 do local IIllI1i111llIi111ii = iliilI1Il1l11iiIIIl % 2 local i1I1iIlIl1iliIi11ii = lIliIilI11l1llIliiIll % 2 if IIllI1i111llIi111ii ~= i1I1iIlIl1iliIi11ii then I1IIlII11II1lI1I1iI = I1IIlII11II1lI1I1iI + II1lliI1lliiii1lIiI end iliilI1Il1l11iiIIIl = (iliilI1Il1l11iiIIIl - IIllI1i111llIi111ii) / 2 lIliIilI11l1llIliiIll = (lIliIilI11l1llIliiIll - i1I1iIlIl1iliIi11ii) / 2 II1lliI1lliiii1lIiI = II1lliI1lliiii1lIiI * 2 end if iliilI1Il1l11iiIIIl < lIliIilI11l1llIliiIll then iliilI1Il1l11iiIIIl = lIliIilI11l1llIliiIll end while iliilI1Il1l11iiIIIl > 0 do local IIllI1i111llIi111ii = iliilI1Il1l11iiIIIl % 2 if IIllI1i111llIi111ii > 0 then I1IIlII11II1lI1I1iI = I1IIlII11II1lI1I1iI + II1lliI1lliiii1lIiI end iliilI1Il1l11iiIIIl = (iliilI1Il1l11iiIIIl - IIllI1i111llIi111ii) / 2 II1lliI1lliiii1lIiI = II1lliI1lliiii1lIiI * 2 end return I1IIlII11II1lI1I1iI end local function iliil11lilIi1IIi1II(i11ilIliI1liiiIiI1i) local II1l1liiiI1iiiIilii = { iIIIill1IilllI1lil1(I1llIi1111I1I1IIi1l, li1I1lilIi1ll1Ii11l, li1I1lilIi1ll1Ii11l + 3) } li1I1lilIi1ll1Ii11l = li1I1lilIi1ll1Ii11l + 4 local iliilI1Il1l11iiIIIl = l11IiiIIl1ll1IIIIIl(II1l1liiiI1iiiIilii[1], Iiil1II1lliiI1l1li1) local lIliIilI11l1llIliiIll = l11IiiIIl1ll1IIIIIl(II1l1liiiI1iiiIilii[2], Iiil1II1lliiI1l1li1) local I1IIlII11II1lI1I1iI = l11IiiIIl1ll1IIIIIl(II1l1liiiI1iiiIilii[3], Iiil1II1lliiI1l1li1) local iiIIlI1IliIiiIiIIlI = l11IiiIIl1ll1IIIIIl(II1l1liiiI1iiiIilii[4], Iiil1II1lliiI1l1li1) Iiil1II1lliiI1l1li1 = (173 * Iiil1II1lliiI1l1li1 + i11ilIliI1liiiIiI1i) % 256 return iiIIlI1IliIiiIiIIlI * 16777216 + I1IIlII11II1lI1I1iI * 65536 + lIliIilI11l1llIliiIll * 256 + iliilI1Il1l11iiIIIl end local function liilllIllIilIilIiIl(IiIi1lil1i1I11I1i1l) local lIl1i1i1lil1il11ilI = lIli11ilIIIiIIiIil11I() local Iill1i1i1i1Il1l11l1 = "" for lIliI1l1iii1iII1iIl1l = I111IilIil1i1lI11Il, lIl1i1i1lil1il11ilI do Iill1i1i1i1Il1l11l1 = Iill1i1i1i1Il1l11l1 .. IliIIII1liIIlIiiIll(l11IiiIIl1ll1IIIIIl(iIIIill1IilllI1lil1(I1llIi1111I1I1IIi1l, li1I1lilIi1ll1Ii11l + lIliI1l1iii1iII1iIl1l - 1), lI1i11Ii11i1iIi1I1i)) lI1i11Ii11i1iIi1I1i = (IiIi1lil1i1I11I1i1l * lI1i11Ii11i1iIi1I1i + 185) % 256 end li1I1lilIi1ll1Ii11l = li1I1lilIi1ll1Ii11l + lIl1i1i1lil1il11ilI return Iill1i1i1i1Il1l11l1 end lI1i11Ii11i1iIi1I1i = lIlI11liI1ii1llIiiiIl() Iiil1II1lliiI1l1li1 = lIlI11liI1ii1llIiiiIl() local I1l11iI11llii11lI1i = {} for lIliI1l1iii1iII1iIl1l = I111IilIil1i1lI11Il, lIlI11liI1ii1llIiiiIl() do local I1iiiI1111ililIIii1 = lIlI11liI1ii1llIiiiIl() local i1i11Ii1ll1l1I1ll1i = (lIliI1l1iii1iII1iIl1l - 1) * 2 I1l11iI11llii11lI1i[i1i11Ii1ll1l1I1ll1i] = IIlli1I1l11lI111ii1(I1iiiI1111ililIIii1, 1, 4) I1l11iI11llii11lI1i[i1i11Ii1ll1l1I1ll1i + 1] = IIlli1I1l11lI111ii1(I1iiiI1111ililIIii1, 5, 8) end local function IIIli11lllll1IlI1i1() local lIllii1llli11iiI1iiI1 = { nil, nil, {}, {}, nil, {}, {} } lIllii1llli11iiI1iiI1[1] = lIlI11liI1ii1llIiiiIl() lIlI11liI1ii1llIiiiIl() lIli11ilIIIiIIiIil11I() lIlI11liI1ii1llIiiiIl() lIli11ilIIIiIIiIil11I() local ilI1iIli11iIiiIliI1 = lIli11ilIIIiIIiIil11I() for lIliI1l1iii1iII1iIl1l = I111IilIil1i1lI11Il, ilI1iIli11iIiiIliI1 do lIllii1llli11iiI1iiI1[6][lIliI1l1iii1iII1iIl1l - I111IilIil1i1lI11Il] = IIIli11lllll1IlI1i1() end lIli11ilIIIiIIiIil11I() lIlI11liI1ii1llIiiiIl() lIlI11liI1ii1llIiiiIl() local i1i1iIlIiIlilii1l11 = lIli11ilIIIiIIiIil11I() - (#{ 5861, 972, 5848, 922, 3376, 1363, 3691, 5253, 4222, 5118, 5877, 1938, 5812, 6491, 5360, 4620, 4181, 1281, 5226, 580, 950, 3166, 2712, 3236 } + iI1Ii1lllillIlIIIll + 133566) local il1lIiiIllliIIl1l1i = lIlI11liI1ii1llIiiiIl() for lIliI1l1iii1iII1iIl1l = I111IilIil1i1lI11Il, i1i1iIlIiIlilii1l11 do local lIli1iliIl1iilIi1liii = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local I1iiiI1111ililIIii1 = iliil11lilIi1IIi1II(il1lIiiIllliIIl1l1i) lIli1iliIl1iilIi1liii[5] = IIlli1I1l11lI111ii1(I1iiiI1111ililIIii1, #{ 1411, 4344, 959, 382, 6207, 6527, 6493, 2244, 3450, 2204, 1577, 1210, 5022, 3394, 1557, 4582, 137, 2548, 876, 6068 } + iI1Ii1lllillIlIIIll + -111, #{ 2768, 4007, 1398, 2785, 4090, 6430, 5169, 3009, 3758, 6869, 626, 109, 533, 1781, 349, 6527, 2012, 3370, 1815, 1896, 3080 } + iI1Ii1lllillIlIIIll + -107) lIli1iliIl1iilIi1liii[7] = IIlli1I1l11lI111ii1(I1iiiI1111ililIIii1, #{6150}, #{ 1900, 3654, 2741, 355, 4118, 6471, 2080, 495, 301, 1831, 5013, 5408, 163, 5086, 2035, 1544, 3458, 2286 }) lIli1iliIl1iilIi1liii[2] = IIlli1I1l11lI111ii1(I1iiiI1111ililIIii1, #{ 2121, 3207, 6525, 4537, 225, 3897, 3463, 3251, 2846, 2899 }, #{ 1876, 6630, 1218, 4107, 5581, 5987, 2006, 5384, 858, 5650, 1738, 1937, 1418, 4025, 5688, 6557, 2354, 812 }) lIli1iliIl1iilIi1liii[1] = IIlli1I1l11lI111ii1(I1iiiI1111ililIIii1, #{ 6699, 3911, 4670, 1040, 4309, 221, 1111, 1223, 4880, 4607, 4355, 4797, 331, 5328, 802, 1318, 2429, 5591, 3189 }, #{ 4002, 6581, 6717, 2958, 1557, 5574, 6927, 1253, 3774, 1548, 836, 5596, 1026, 1547, 3770, 1319, 4107, 6580, 1026, 5801, 1812, 6326, 2307, 1696 } + iI1Ii1lllillIlIIIll + -116) lIli1iliIl1iilIi1liii[4] = IIlli1I1l11lI111ii1(I1iiiI1111ililIIii1, #{6605}, #{ 3819, 3548, 5663, 2690, 3175, 5493, 1390, 6202, 2155 }) lIllii1llli11iiI1iiI1[4][lIliI1l1iii1iII1iIl1l] = lIli1iliIl1iilIi1liii end lIli11ilIIIiIIiIil11I() lIllii1llli11iiI1iiI1[5] = lIlI11liI1ii1llIiiiIl() local ilI1iIli11iIiiIliI1 = lIli11ilIIIiIIiIil11I() - (#{ 6176, 5097, 374, 232, 4033, 1776, 5671, 5940, 534, 103, 343, 2598, 5048, 2589, 508, 2424, 6835, 3523, 4178, 804 } + iI1Ii1lllillIlIIIll + 133574) local IIl1I1IlliI1I1Il1ll = lIlI11liI1ii1llIiiiIl() for lIliI1l1iii1iII1iIl1l = I111IilIil1i1lI11Il, ilI1iIli11iIiiIliI1 do local IIi1liliI1III111iiI local ll11il1lliiII1IIl1i = lIlI11liI1ii1llIiiiIl() if ll11il1lliiII1IIl1i == #{ 3935, 4036, 2757, 3193, 19, 6602, 6332, 1246, 3376, 1488, 1578, 2845, 162, 3822, 3294, 4209, 4286, 1163, 270, 6236, 2748, 2713 } + iI1Ii1lllillIlIIIll + 106 then IIi1liliI1III111iiI = IIiI11lII11I1iil111() + IIiI11lII11I1iil111() end if ll11il1lliiII1IIl1i == #{ 1181, 5347, 6072, 4143, 2597, 2425, 3778, 6467, 3646, 2052, 2706, 2914, 3420, 5711, 2325, 716, 486, 6284, 5253, 6044, 3240, 3669 } + iI1Ii1lllillIlIIIll + -43 then IIi1liliI1III111iiI = IIiI11lII11I1iil111() + IIiI11lII11I1iil111() end if ll11il1lliiII1IIl1i == #{ 5025, 6086, 2961, 3855, 5091, 2093, 4438, 2877, 1887, 4084, 1645 } then IIi1liliI1III111iiI = IIiI11lII11I1iil111() + IIiI11lII11I1iil111() end if ll11il1lliiII1IIl1i == #{ 1969, 4937, 4978, 1153, 3384, 5596, 5752, 6607, 945, 2071, 1294, 6737, 6334, 1202, 2440, 2451, 6635, 694, 428, 542, 4549, 3613 } + iI1Ii1lllillIlIIIll + -94 then IIi1liliI1III111iiI = #{ 5976, 5343, 5154, 6020, 3143, 4471, 1337, 93, 4312, 4921, 790, 2274, 1333, 102, 1456, 5229, 5828, 2855, 708, 1798, 4808 } + iI1Ii1lllillIlIIIll + 58136 == #{ 5976, 5343, 5154, 6020, 3143, 4471, 1337, 93, 4312, 4921, 790, 2274, 1333, 102, 1456, 5229, 5828, 2855, 708, 1798, 4808 } + iI1Ii1lllillIlIIIll + 58136 end if ll11il1lliiII1IIl1i == #{ 829, 207, 865, 586, 6250, 5582, 1872, 6955, 4466, 4554, 3263, 6007, 121, 3952, 5821, 4299, 1891, 5032, 6264, 3121 } + iI1Ii1lllillIlIIIll + 23 then IIi1liliI1III111iiI = IIiI11lII11I1iil111() end if ll11il1lliiII1IIl1i == #{ 1822, 689, 3013, 1447, 1207, 4608, 5332, 3387, 3088, 3131, 1299, 5503, 192, 5931, 728, 5377, 2249, 6391, 6294, 5821, 3129, 5273 } + iI1Ii1lllillIlIIIll + 20 then IIi1liliI1III111iiI = ll1Ii1lIli1IlI1lIll(liilllIllIilIilIiIl(IIl1I1IlliI1I1Il1ll), #{ 5640, 3019, 1232, 1004, 24, 3542 }) end if ll11il1lliiII1IIl1i == #{ 5809, 4455, 2376, 5577, 6339, 3628, 4409, 510, 791, 2651, 201, 2856, 4820, 2549, 159, 1137, 4607, 4938, 1062, 4196 } + iI1Ii1lllillIlIIIll + -45 then IIi1liliI1III111iiI = #{ 45, 751, 6563, 442, 356, 1850, 2226, 209, 2674, 2023, 856, 5912, 3973, 2808, 406, 605, 6038, 4606, 6064, 5485, 6076, 6762, 6253 } + iI1Ii1lllillIlIIIll + 29277 == #{ 5850, 3529, 6355, 65, 5534, 5032, 6270, 6132, 6782, 3051, 5424, 1387, 1126, 5940, 787, 1441, 1044, 573, 5005, 2896, 2541, 6719, 1424 } + iI1Ii1lllillIlIIIll + 35498 end if ll11il1lliiII1IIl1i == #{ 3013, 6825, 6880, 994, 4747, 3822, 5805, 2741, 580, 150, 2691, 431, 2241, 5454, 5768, 6885, 3336, 3083, 490, 5569 } + iI1Ii1lllillIlIIIll + 63 then IIi1liliI1III111iiI = IIiI11lII11I1iil111() + IIiI11lII11I1iil111() end if ll11il1lliiII1IIl1i == #{ 868, 5001, 2606, 2648, 6323, 574, 4736, 474, 1017, 5346, 2179, 3562, 2121, 5134, 4889, 5398, 3387, 5523, 6008, 1067, 4451 } + iI1Ii1lllillIlIIIll + 9 then IIi1liliI1III111iiI = IIiI11lII11I1iil111() end lIllii1llli11iiI1iiI1[3][lIliI1l1iii1iII1iIl1l - I111IilIil1i1lI11Il] = IIi1liliI1III111iiI end for lIliI1l1iii1iII1iIl1l = I111IilIil1i1lI11Il, i1i1iIlIiIlilii1l11 do local lIli1iliIl1iilIi1liii = lIllii1llli11iiI1iiI1[4][lIliI1l1iii1iII1iIl1l] local lIlIII1IiIiiIllIlliil = I1l11iI11llii11lI1i[lIli1iliIl1iilIi1liii[5]] if lIlIII1IiIiiIllIlliil == #{ 4341, 1385, 6381, 3185 } then lIli1iliIl1iilIi1liii[8] = lIllii1llli11iiI1iiI1[3][lIli1iliIl1iilIi1liii[7]] end if lIlIII1IiIiiIllIlliil == #{ 4779, 5783, 2794 } then if lIli1iliIl1iilIi1liii[4] > 255 then lIli1iliIl1iilIi1liii[9] = true lIli1iliIl1iilIi1liii[10] = lIllii1llli11iiI1iiI1[3][lIli1iliIl1iilIi1liii[4] - 256] end if lIli1iliIl1iilIi1liii[2] > 255 then lIli1iliIl1iilIi1liii[3] = true lIli1iliIl1iilIi1liii[6] = lIllii1llli11iiI1iiI1[3][lIli1iliIl1iilIi1liii[2] - 256] end end if lIlIII1IiIiiIllIlliil == #{1255, 4339} and lIli1iliIl1iilIi1liii[2] > 255 then lIli1iliIl1iilIi1liii[3] = true lIli1iliIl1iilIi1liii[6] = lIllii1llli11iiI1iiI1[3][lIli1iliIl1iilIi1liii[2] - 256] end if lIlIII1IiIiiIllIlliil == #{5328} and lIli1iliIl1iilIi1liii[4] > 255 then lIli1iliIl1iilIi1liii[9] = true lIli1iliIl1iilIi1liii[10] = lIllii1llli11iiI1iiI1[3][lIli1iliIl1iilIi1liii[4] - 256] end end lIllii1llli11iiI1iiI1[2] = lIlI11liI1ii1llIiiiIl() local ilI1iIli11iIiiIliI1 = lIli11ilIIIiIIiIil11I() for lIliI1l1iii1iII1iIl1l = I111IilIil1i1lI11Il, ilI1iIli11iIiiIliI1 do lIllii1llli11iiI1iiI1[7][lIliI1l1iii1iII1iIl1l] = lIli11ilIIIiIIiIil11I() end return lIllii1llli11iiI1iiI1 end local function II11I1Ii1iiIlIiI1iI(lIllii1llli11iiI1iiI1, lIlIIl1I11iIiiili1lIl, l1lli1iIl1i1I1iliII) local Ii1iIii1lli11i1i11l, ilIil1iiIlIIiil1lli = 17, 4 local lIliiIlillII111l1i1iI = lIllii1llli11iiI1iiI1[4] local lIl11iiII1iIII1ilI1I1 = 2 local lIl11IIliI11IIiii1i = lIllii1llli11iiI1iiI1[6] local l1lll1lI1lIiil1Iil1 = lIllii1llli11iiI1iiI1[1] local lIllI1I1l1il1II1i11lI = lIllii1llli11iiI1iiI1[5] local IIIllI1Il1Ill11lll1 = 5 local I1Ilii1iIiiliii1Il1 = lIllii1llli11iiI1iiI1[7] local I1l11iiil1l1I11Il11 = 4 local function Iil111Iil1II1iiIiii(...) local Il1iili1iIlilI11ii1 = 0 local II11lIIil11lIll1Ill = { liIliI11Ill11l1I1i1({}, 1, lIllI1I1l1il1II1i11lI) } local ilIlilIiiIlIl1lll1l = 1 local I1I1Ii1IiIIiiI1iliI = {} local Ill1IliIIIll11l1II1 = {} local lIlIIl1I11iIiiili1lIl = ilIii1iiiIIii1llili() local iIliiilIi11iIiIlill = { ... } local ll1iIl1l11l1lil1iii = #iIliiilIi11iIiIlill - 1 for lIliI1l1iii1iII1iIl1l = 0, ll1iIl1l11l1lil1iii do if lIliI1l1iii1iII1iIl1l < l1lll1lI1lIiil1Iil1 then II11lIIil11lIll1Ill[lIliI1l1iii1iII1iIl1l] = iIliiilIi11iIiIlill[lIliI1l1iii1iII1iIl1l + 1] end end local function li11IIlilIl1lll1iIi(...) local I1IIlII11II1lI1I1iI = lIl1ilillIiIIlIIi1Il1("#", ...) local lIIIi1I1llII1iiIl11 = { ... } return I1IIlII11II1lI1I1iI, lIIIi1I1llII1iiIl11 end local function lIi1IIlllili1lIl1li() while true do local I1lIlI1ii111lllI1Ii = lIliiIlillII111l1i1iI[ilIlilIiiIlIl1lll1l] local Ii1Ili1liIiII1il1l1 = I1lIlI1ii111lllI1Ii[5] ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l + 1 if Ii1Ili1liIiII1il1l1 < 10 then if Ii1Ili1liIiII1il1l1 >= 5 then if Ii1Ili1liIiII1il1l1 < 7 then if Ii1Ili1liIiII1il1l1 ~= 6 then local lIliIilI11l1llIliiIll, I1IIlII11II1lI1I1iI if I1lIlI1ii111lllI1Ii[9] then lIliIilI11l1llIliiIll = I1lIlI1ii111lllI1Ii[10] else lIliIilI11l1llIliiIll = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]] end if I1lIlI1ii111lllI1Ii[3] then I1IIlII11II1lI1I1iI = I1lIlI1ii111lllI1Ii[6] else I1IIlII11II1lI1I1iI = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[2]] end II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]][lIliIilI11l1llIliiIll] = I1IIlII11II1lI1I1iI else local I1IIlII11II1lI1I1iI if I1lIlI1ii111lllI1Ii[3] then I1IIlII11II1lI1I1iI = I1lIlI1ii111lllI1Ii[6] else I1IIlII11II1lI1I1iI = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[2]] end II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]][I1IIlII11II1lI1I1iI] end elseif Ii1Ili1liIiII1il1l1 >= 8 then if Ii1Ili1liIiII1il1l1 == 9 then local lIlilIl1iIii1illii1ll = I1lIlI1ii111lllI1Ii[1] local i1i11Ii1ll1l1I1ll1i = lIlilIl1iIii1illii1ll + 2 local i1ilii11llIII1l11l1 = { II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll](II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll + 1], II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll + 2]) } for lIliI1l1iii1iII1iIl1l = 1, I1lIlI1ii111lllI1Ii[2] do II11lIIil11lIll1Ill[i1i11Ii1ll1l1I1ll1i + lIliI1l1iii1iII1iIl1l] = i1ilii11llIII1l11l1[lIliI1l1iii1iII1iIl1l] end if II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll + 3] ~= nil then II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll + 2] = II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll + 3] else ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l + 1 end elseif I1lIlI1ii111lllI1Ii[2] == 180 then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l - 1 lIliiIlillII111l1i1iI[ilIlilIiiIlIl1lll1l] = { [5] = 17, [1] = (I1lIlI1ii111lllI1Ii[1] - 251) % 256, [4] = (I1lIlI1ii111lllI1Ii[4] - 251) % 256 } else local lIlilIl1iIii1illii1ll = I1lIlI1ii111lllI1Ii[1] local ilI1iIli11iIiiIliI1 = I1lIlI1ii111lllI1Ii[4] local lllIlllII1IIiIllilI = ilI1iIli11iIiiIliI1 > 0 and ilI1iIli11iIiiIliI1 - 1 or ll1iIl1l11l1lil1iii - l1lll1lI1lIiil1Iil1 if lllIlllII1IIiIllilI < 0 then lllIlllII1IIiIllilI = -1 end for lIliI1l1iii1iII1iIl1l = lIlilIl1iIii1illii1ll, lIlilIl1iIii1illii1ll + lllIlllII1IIiIllilI do II11lIIil11lIll1Ill[lIliI1l1iii1iII1iIl1l] = iIliiilIi11iIiIlill[l1lll1lI1lIiil1Iil1 + (lIliI1l1iii1iII1iIl1l - lIlilIl1iIii1illii1ll) + 1] end if ilI1iIli11iIiiIliI1 == 0 then Il1iili1iIlilI11ii1 = lIlilIl1iIii1illii1ll + lllIlllII1IIiIllilI for lIliI1l1iii1iII1iIl1l = Il1iili1iIlilI11ii1 + 1, lIllI1I1l1il1II1i11lI do II11lIIil11lIll1Ill[lIliI1l1iii1iII1iIl1l] = nil end end end else II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = I1lIlI1ii111lllI1Ii[8] end elseif Ii1Ili1liIiII1il1l1 < 2 then if Ii1Ili1liIiII1il1l1 == 1 then local IillIIlii1liii11111 = lIl11IIliI11IIiii1i[I1lIlI1ii111lllI1Ii[7]] local iilIililIIllIlli1II = {} if IillIIlii1liii11111[lIl11iiII1iIII1ilI1I1] > 0 then do local iIl1ii1iii1llill1l1 = {} iilIililIIllIlli1II = lIlli11i1l1Il1iIlI1({}, { __index = function(lIIIi1I1llII1iiIl11, ll1IIllllllIliiiI11) local iiII1IIl1Ili1llii11 = iIl1ii1iii1llill1l1[ll1IIllllllIliiiI11] return iiII1IIl1Ili1llii11[1][iiII1IIl1Ili1llii11[2]] end, __newindex = function(lIIIi1I1llII1iiIl11, ll1IIllllllIliiiI11, lIllii1li11Ii1111iI1I) local iiII1IIl1Ili1llii11 = iIl1ii1iii1llill1l1[ll1IIllllllIliiiI11] iiII1IIl1Ili1llii11[1][iiII1IIl1Ili1llii11[2]] = lIllii1li11Ii1111iI1I end }) for lIliI1l1iii1iII1iIl1l = 1, IillIIlii1liii11111[lIl11iiII1iIII1ilI1I1] do local Ii11i1l1lII11lili1l = lIliiIlillII111l1i1iI[ilIlilIiiIlIl1lll1l] if Ii11i1l1lII11lili1l[IIIllI1Il1Ill11lll1] == Ii1iIii1lli11i1i11l then iIl1ii1iii1llill1l1[lIliI1l1iii1iII1iIl1l - 1] = { II11lIIil11lIll1Ill, Ii11i1l1lII11lili1l[I1l11iiil1l1I11Il11] } elseif Ii11i1l1lII11lili1l[IIIllI1Il1Ill11lll1] == ilIil1iiIlIIiil1lli then iIl1ii1iii1llill1l1[lIliI1l1iii1iII1iIl1l - 1] = { l1lli1iIl1i1I1iliII, Ii11i1l1lII11lili1l[I1l11iiil1l1I11Il11] } end ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l + 1 end if not I1I1Ii1IiIIiiI1iliI[II11lIIil11lIll1Ill] then I1I1Ii1IiIIiiI1iliI[II11lIIil11lIll1Ill] = {iIl1ii1iii1llill1l1} else i11lliliIl1l1l1iiiI(I1I1Ii1IiIIiiI1iliI[II11lIIil11lIll1Ill], iIl1ii1iii1llill1l1) end end end local lIIiI1I1lIll11i1II1 = II11I1Ii1iiIlIiI1iI(IillIIlii1liii11111, lIlIIl1I11iIiiili1lIl, iilIililIIllIlli1II) II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = lIIiI1I1lIll11i1II1 elseif I1lIlI1ii111lllI1Ii[2] == 91 then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l - 1 lIliiIlillII111l1i1iI[ilIlilIiiIlIl1lll1l] = { [5] = 4, [1] = (I1lIlI1ii111lllI1Ii[1] - 111) % 256, [4] = (I1lIlI1ii111lllI1Ii[4] - 111) % 256 } else II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = not II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]] end elseif Ii1Ili1liIiII1il1l1 >= 3 then if Ii1Ili1liIiII1il1l1 ~= 4 then I1I1Ii1IiIIiiI1iliI[II11lIIil11lIll1Ill] = nil local lIlilIl1iIii1illii1ll = I1lIlI1ii111lllI1Ii[1] local lIlI1Il1I1li1IIlli1ii = I1lIlI1ii111lllI1Ii[4] if lIlI1Il1I1li1IIlli1ii == 1 then return true end local lIl1I1lliilIi1iI1IIll = lIlilIl1iIii1illii1ll + lIlI1Il1I1li1IIlli1ii - 2 if lIlI1Il1I1li1IIlli1ii == 0 then lIl1I1lliilIi1iI1IIll = Il1iili1iIlilI11ii1 end return true, lIlilIl1iIii1illii1ll, lIl1I1lliilIi1iI1IIll else II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = l1lli1iIl1i1I1iliII[I1lIlI1ii111lllI1Ii[4]] end else local i1ilii11llIII1l11l1 = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]] for lIliI1l1iii1iII1iIl1l = I1lIlI1ii111lllI1Ii[4] + 1, I1lIlI1ii111lllI1Ii[2] do i1ilii11llIII1l11l1 = i1ilii11llIII1l11l1 .. II11lIIil11lIll1Ill[lIliI1l1iii1iII1iIl1l] end II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = i1ilii11llIII1l11l1 end elseif Ii1Ili1liIiII1il1l1 >= 15 then if Ii1Ili1liIiII1il1l1 < 18 then if Ii1Ili1liIiII1il1l1 >= 16 then if Ii1Ili1liIiII1il1l1 == 17 then if I1lIlI1ii111lllI1Ii[2] == 208 then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l - 1 lIliiIlillII111l1i1iI[ilIlilIiiIlIl1lll1l] = { [5] = 13, [1] = (I1lIlI1ii111lllI1Ii[1] - 43) % 256, [2] = (I1lIlI1ii111lllI1Ii[4] - 43) % 256 } elseif I1lIlI1ii111lllI1Ii[2] == 201 then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l - 1 lIliiIlillII111l1i1iI[ilIlilIiiIlIl1lll1l] = { [5] = 9, [1] = (I1lIlI1ii111lllI1Ii[1] - 223) % 256, [2] = (I1lIlI1ii111lllI1Ii[4] - 223) % 256 } else II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]] end else II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = { liIliI11Ill11l1I1i1(IiIliIIIll1llIIi1i1, 1, I1lIlI1ii111lllI1Ii[4] == 0 and 255 or I1lIlI1ii111lllI1Ii[4]) } end else local lIliIilI11l1llIliiIll, I1IIlII11II1lI1I1iI if I1lIlI1ii111lllI1Ii[9] then lIliIilI11l1llIliiIll = I1lIlI1ii111lllI1Ii[10] else lIliIilI11l1llIliiIll = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]] end if I1lIlI1ii111lllI1Ii[3] then I1IIlII11II1lI1I1iI = I1lIlI1ii111lllI1Ii[6] else I1IIlII11II1lI1I1iI = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[2]] end if lIliIilI11l1llIliiIll == I1IIlII11II1lI1I1iI ~= (I1lIlI1ii111lllI1Ii[1] ~= 0) then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l + 1 end end elseif Ii1Ili1liIiII1il1l1 < 19 then lIlIIl1I11iIiiili1lIl[I1lIlI1ii111lllI1Ii[8]] = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] elseif Ii1Ili1liIiII1il1l1 ~= 20 then local l1I1IlIllI1I1I1IlII = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]] local I1IIlII11II1lI1I1iI if I1lIlI1ii111lllI1Ii[3] then I1IIlII11II1lI1I1iI = I1lIlI1ii111lllI1Ii[6] else I1IIlII11II1lI1I1iI = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[2]] end II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1] + 1] = l1I1IlIllI1I1I1IlII II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = l1I1IlIllI1I1I1IlII[I1IIlII11II1lI1I1iI] else II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = lIlIIl1I11iIiiili1lIl[I1lIlI1ii111lllI1Ii[8]] end elseif Ii1Ili1liIiII1il1l1 < 12 then if Ii1Ili1liIiII1il1l1 ~= 11 then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l + (I1lIlI1ii111lllI1Ii[7] - ii1lI1i1l1lil1IIIIl) else local lIlilIl1iIii1illii1ll = I1lIlI1ii111lllI1Ii[1] local iIliiilIi11iIiIlill = I1lIlI1ii111lllI1Ii[4] local lIli1iil1ili1i1iIlIil = I1lIlI1ii111lllI1Ii[2] local i1iII1i1llI1iI11liI, lIl1I1lliilIi1iI1IIll, lIi1IIlllili1lIl1li if iIliiilIi11iIiIlill ~= 1 then if iIliiilIi11iIiIlill ~= 0 then lIl1I1lliilIi1iI1IIll = lIlilIl1iIii1illii1ll + iIliiilIi11iIiIlill - 1 else lIl1I1lliilIi1iI1IIll = Il1iili1iIlilI11ii1 end lIl1I1lliilIi1iI1IIll, i1iII1i1llI1iI11liI = li11IIlilIl1lll1iIi(II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll](liIliI11Ill11l1I1i1(II11lIIil11lIll1Ill, lIlilIl1iIii1illii1ll + 1, lIl1I1lliilIi1iI1IIll))) else lIl1I1lliilIi1iI1IIll, i1iII1i1llI1iI11liI = li11IIlilIl1lll1iIi(II11lIIil11lIll1Ill[lIlilIl1iIii1illii1ll]()) end if lIli1iil1ili1i1iIlIil ~= 1 then if lIli1iil1ili1i1iIlIil ~= 0 then lIl1I1lliilIi1iI1IIll = lIlilIl1iIii1illii1ll + lIli1iil1ili1i1iIlIil - 2 Il1iili1iIlilI11ii1 = lIl1I1lliilIi1iI1IIll + 1 else lIl1I1lliilIi1iI1IIll = lIl1I1lliilIi1iI1IIll + lIlilIl1iIii1illii1ll - 1 Il1iili1iIlilI11ii1 = lIl1I1lliilIi1iI1IIll end lIi1IIlllili1lIl1li = 0 for lIliI1l1iii1iII1iIl1l = lIlilIl1iIii1illii1ll, lIl1I1lliilIi1iI1IIll do lIi1IIlllili1lIl1li = lIi1IIlllili1lIl1li + 1 II11lIIil11lIll1Ill[lIliI1l1iii1iII1iIl1l] = i1iII1i1llI1iI11liI[lIi1IIlllili1lIl1li] end else Il1iili1iIlilI11ii1 = lIlilIl1iIii1illii1ll - 1 end for lIliI1l1iii1iII1iIl1l = Il1iili1iIlilI11ii1 + 1, lIllI1I1l1il1II1i11lI do II11lIIil11lIll1Ill[lIliI1l1iii1iII1iIl1l] = nil end end elseif Ii1Ili1liIiII1il1l1 >= 13 then if Ii1Ili1liIiII1il1l1 == 14 then if I1lIlI1ii111lllI1Ii[2] == 184 then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l - 1 lIliiIlillII111l1i1iI[ilIlilIiiIlIl1lll1l] = { [5] = 3, [1] = (I1lIlI1ii111lllI1Ii[1] - 155) % 256, [4] = (I1lIlI1ii111lllI1Ii[4] - 155) % 256 } else local lIll1il1i1I11IiIi1li1 = I1lIlI1ii111lllI1Ii[1] local lIlIiIIll1IiilillIiI1 = {} for liII1llIIl1IIIlilil, iIl1ii1iii1llill1l1 in pairs(I1I1Ii1IiIIiiI1iliI[II11lIIil11lIll1Ill]) do for liII1llIIl1IIIlilil, iiII1IIl1Ili1llii11 in pairs(iIl1ii1iii1llill1l1) do if iiII1IIl1Ili1llii11[1] == II11lIIil11lIll1Ill and lIll1il1i1I11IiIi1li1 <= iiII1IIl1Ili1llii11[2] then local l1IIl1iiIIIl11IlliI = iiII1IIl1Ili1llii11[2] if not lIlIiIIll1IiilillIiI1[l1IIl1iiIIIl11IlliI] then II11I1Ii1iiIlIiI1iI(Ill1IliIIIll11l1II1, II11lIIil11lIll1Ill[l1IIl1iiIIIl11IlliI]) lIlIiIIll1IiilillIiI1[l1IIl1iiIIIl11IlliI] = #Ill1IliIIIll11l1II1 end iiII1IIl1Ili1llii11[1] = Ill1IliIIIll11l1II1 iiII1IIl1Ili1llii11[2] = lIlIiIIll1IiilillIiI1[l1IIl1iiIIIl11IlliI] end end end end elseif not not II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] == (I1lIlI1ii111lllI1Ii[2] == 0) then ilIlilIiiIlIl1lll1l = ilIlilIiiIlIl1lll1l + 1 end else local lIliIilI11l1llIliiIll, I1IIlII11II1lI1I1iI if I1lIlI1ii111lllI1Ii[9] then lIliIilI11l1llIliiIll = I1lIlI1ii111lllI1Ii[10] else lIliIilI11l1llIliiIll = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[4]] end if I1lIlI1ii111lllI1Ii[3] then I1IIlII11II1lI1I1iI = I1lIlI1ii111lllI1Ii[6] else I1IIlII11II1lI1I1iI = II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[2]] end II11lIIil11lIll1Ill[I1lIlI1ii111lllI1Ii[1]] = lIliIilI11l1llIliiIll + I1IIlII11II1lI1I1iI end end end local iII1llIl11IIili11I1, Iill1i1i1i1Il1l11l1, lIll1il1i1I11IiIi1li1, lIl1IiIII1l1iI1I1lllI = IIIl1iIIllli111ilIl(lIi1IIlllili1lIl1li) if iII1llIl11IIili11I1 then if lIll1il1i1I11IiIi1li1 then return liIliI11Ill11l1I1i1(II11lIIil11lIll1Ill, lIll1il1i1I11IiIi1li1, lIl1IiIII1l1iI1I1lllI) end else lIIIiiIi1l1i1I11lil("Luraph Script:" .. (I1Ilii1iIiiliii1Il1[ilIlilIiiIlIl1lll1l - 1] or "") .. ": " .. l1l11Illl1Ii1ii1iiI(Iill1i1i1i1Il1l11l1), 0) end end ii1i1i11ilIlI1lll1i(Iil111Iil1II1iiIiii, lIlIIl1I11iIiiili1lIl) return Iil111Iil1II1iiIiii end local lIlIiIIll1IiilillIiI1 = IIIli11lllll1IlI1i1() return II11I1Ii1iiIlIiI1iI(lIlIiIIll1IiilillIiI1, lIlIIl1I11iIiiili1lIl)() end return li1I11iili1iIiiiIiilIii1iiiIIii1llili()) 